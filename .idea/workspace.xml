<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="99e69758-7e70-4d44-b8ee-512f794de53e" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/controllers/auth_controller.py" beforeDir="false" afterPath="$PROJECT_DIR$/controllers/auth_controller.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data/models/auth_model.py" beforeDir="false" afterPath="$PROJECT_DIR$/data/models/auth_model.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data/models/gate_pass.py" beforeDir="false" afterPath="$PROJECT_DIR$/data/models/gate_pass.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/helpers/custom_exceptions.py" beforeDir="false" afterPath="$PROJECT_DIR$/helpers/custom_exceptions.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/helpers/db_connect.py" beforeDir="false" afterPath="$PROJECT_DIR$/helpers/db_connect.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postman.http" beforeDir="false" afterPath="$PROJECT_DIR$/postman.http" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/auth_service.py" beforeDir="false" afterPath="$PROJECT_DIR$/services/auth_service.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/gate_pass_service.py" beforeDir="false" afterPath="$PROJECT_DIR$/services/gate_pass_service.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Flask Main" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2uXJulQ65Z6ixm0h5rkuGVYj6oy" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Flask server.Flask (app.py).executor&quot;: &quot;Run&quot;,
    &quot;Flask server.layered_achitecture_gatepass.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.postman | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.postman | Generate Token....executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.postman | Login User....executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.postman | Register User.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore_missing_gitignore&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/DELL USER/Desktop/layered_achitecture_gatepass&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\DELL USER\Desktop\layered_achitecture_gatepass" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\DELL USER\Desktop\layered_achitecture_gatepass\data" />
      <recent name="C:\Users\DELL USER\Desktop\layered_achitecture_gatepass\services" />
      <recent name="C:\Users\DELL USER\Desktop\layered_achitecture_gatepass" />
      <recent name="C:\Users\DELL USER\Desktop\layered_achitecture_gatepass\repositories" />
    </key>
  </component>
  <component name="RunManager" selected="Flask server.layered_achitecture_gatepass">
    <configuration name="postman | Generate Token..." type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/postman.http" index="4" requestIdentifier="Generate Token..." runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="postman | Login User..." type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/postman.http" index="3" requestIdentifier="Login User..." runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="postman | Register User" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/postman.http" requestIdentifier="Register User" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="postman | #2" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/postman.http" index="2" requestIdentifier="#2" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="Flask (app.py)" type="Python.FlaskServer" temporary="true" nameIsGenerated="true">
      <module name="layered_achitecture_gatepass" />
      <option name="target" value="$PROJECT_DIR$/app.py" />
      <option name="targetType" value="PATH" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="layered_achitecture_gatepass" type="Python.FlaskServer">
      <module name="layered_achitecture_gatepass" />
      <option name="target" value="$PROJECT_DIR$/app.py" />
      <option name="targetType" value="PATH" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.postman | Generate Token..." />
        <item itemvalue="HTTP Request.postman | Login User..." />
        <item itemvalue="HTTP Request.postman | #2" />
        <item itemvalue="HTTP Request.postman | Register User" />
        <item itemvalue="Flask server.Flask (app.py)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-PY-242.24807.21" />
        <option value="bundled-python-sdk-00717045f1d3-399fe30bd8c1-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.24807.21" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="99e69758-7e70-4d44-b8ee-512f794de53e" name="Changes" comment="" />
      <created>1742389211362</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1742389211362</updated>
      <workItem from="1742389212859" duration="7482000" />
      <workItem from="1742465567485" duration="967000" />
      <workItem from="1742467438259" duration="15926000" />
      <workItem from="1742515244175" duration="8919000" />
      <workItem from="1742734117967" duration="27000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/layered_achitecture_gatepass$Flask__app_py_.coverage" NAME="Flask (app.py) Coverage Results" MODIFIED="1742515275283" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/layered_achitecture_gatepass$layered_achitecture_gatepass.coverage" NAME="layered_achitecture_gatepass Coverage Results" MODIFIED="1742564374464" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>